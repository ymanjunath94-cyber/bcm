name: Build Android APK

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # Create missing android/ (and other) folders if not present
      - name: Ensure Android project exists
        run: |
          if [ ! -d android ]; then
            flutter create .
          fi

      - name: flutter pub get
        run: flutter pub get

      # Copy your downloaded Firebase config
      - name: Copy google-services.json
        run: |
          mkdir -p android/app
          cp firebase/google-services.json android/app/google-services.json

      # Make sure Gradle has Google Services plugin set up
      - name: Add Google Services classpath (if top-level build.gradle exists)
        run: |
          if [ -f android/build.gradle ]; then
            if ! grep -q 'com.google.gms:google-services' android/build.gradle; then
              sed -i '/dependencies {/a \        classpath "com.google.gms:google-services:4.4.2"' android/build.gradle
            fi
          fi

      - name: Apply Google Services plugin to app module
        run: |
          if [ -f android/app/build.gradle ]; then
            if ! grep -q 'com.google.gms.google-services' android/app/build.gradle; then
              echo 'apply plugin: "com.google.gms.google-services"' >> android/app/build.gradle
            fi
          fi

      # (Optional but recommended) set applicationId to match google-services.json package_name
      - name: Set applicationId to match Firebase package_name
        run: |
          if [ -f android/app/build.gradle ] && [ -f firebase/google-services.json ]; then
            PKG=$(grep -oP '"package_name"\s*:\s*"\K[^"]+' firebase/google-services.json || true)
            if [ ! -z "$PKG" ]; then
              sed -i 's/applicationId\s*".*"/applicationId "'$PKG'"/' android/app/build.gradle || true
            fi
          fi

      - name: Build APK (debug)
        run: flutter build apk --debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: build/app/outputs/flutter-apk/app-debug.apk