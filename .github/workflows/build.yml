name: Build Android APK

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable

      # Create Android project if it doesn't exist (keeps your lib/ code)
      - name: Ensure Flutter project (Android only)
        run: |
          if [ ! -d android ]; then
            flutter create . --platforms=android --org com.bcm
          fi

      # Copy google-services.json from either /firebase or repo root
      - name: Copy google-services.json
        run: |
          mkdir -p android/app
          if [ -f firebase/google-services.json ]; then
            cp firebase/google-services.json android/app/google-services.json
          elif [ -f google-services.json ]; then
            cp google-services.json android/app/google-services.json
          else
            echo "google-services.json not found"; exit 1
          fi

      # Add Google Services classpath + plugin (works for .gradle and .gradle.kts)
      - name: Configure Gradle for Firebase
        run: |
          # ---- project-level (build.gradle or build.gradle.kts) ----
          if [ -f android/build.gradle ]; then
            grep -q "com.google.gms:google-services" android/build.gradle || cat >> android/build.gradle <<'EOF'

buildscript {
    repositories { google(); mavenCentral() }
    dependencies { classpath 'com.google.gms:google-services:4.4.2' }
}
EOF
          else
            grep -q "com.google.gms:google-services" android/build.gradle.kts || cat >> android/build.gradle.kts <<'EOF'

buildscript {
    repositories { google(); mavenCentral() }
    dependencies { classpath("com.google.gms:google-services:4.4.2") }
}
EOF
          fi

          # ---- app-level (apply plugin + multidex) ----
          if [ -f android/app/build.gradle ]; then
            grep -q "com.google.gms.google-services" android/app/build.gradle || echo "apply plugin: 'com.google.gms.google-services'" >> android/app/build.gradle
            grep -q "multidex" android/app/build.gradle || sed -i 's/defaultConfig {/defaultConfig {\n        multiDexEnabled true/' android/app/build.gradle
            grep -q "androidx.multidex:multidex" android/app/build.gradle || sed -i 's/dependencies {/dependencies {\n    implementation "androidx.multidex:multidex:2.0.1"/' android/app/build.gradle || true
          else
            grep -q "com.google.gms.google-services" android/app/build.gradle.kts || echo 'apply(plugin = "com.google.gms.google-services")' >> android/app/build.gradle.kts
            grep -q "multidex" android/app/build.gradle.kts || sed -i 's/defaultConfig {/defaultConfig {\n        multiDexEnabled = true/' android/app/build.gradle.kts
            grep -q "androidx.multidex:multidex" android/app/build.gradle.kts || sed -i 's/dependencies {/dependencies {\n    implementation("androidx.multidex:multidex:2.0.1")/' android/app/build.gradle.kts || true
          fi

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK
        run: flutter build apk --debug

      - name: Upload APK
        uses: actions/upload-artifact@v4
        with:
          name: bcm.apk
          path: build/app/outputs/flutter-apk/app-debug.apk